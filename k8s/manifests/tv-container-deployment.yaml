apiVersion: apps/v1
kind: Deployment
metadata:
  name: tv-container-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tv-container
  template:
    metadata:
      labels:
        app: tv-container
    spec:
      containers:
        # Parent container running Docker daemon (DinD)
        - name: tv-container-parent
          image: docker:20-dind  # Use Docker-in-Docker image
          securityContext:
            privileged: true    # Privileged mode is required for DinD
          command: ["/bin/sh", "-c", "echo 'John Doe' > /data/input.txt; sleep 3600"]
          volumeMounts:
            - name: shared-data
              mountPath: /data
            - name: docker-socket
              mountPath: /var/run/docker.sock  # Bind Docker socket
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - sleep 60 && exit 1  # Fail after 60 seconds
            initialDelaySeconds: 60  # Start liveness check after 60 seconds
            periodSeconds: 10        # Check every 10 seconds

        # Child containers reading the shared data
        - name: tv-container-child1
          image: busybox
          command: ["/bin/sh", "-c", "cat /data/input.txt; sleep 3600"]
          volumeMounts:
            - name: shared-data
              mountPath: /data

        - name: tv-container-child2
          image: busybox
          command: ["/bin/sh", "-c", "cat /data/input.txt; sleep 3600"]
          volumeMounts:
            - name: shared-data
              mountPath: /data

        - name: tv-container-child3
          image: busybox
          command: ["/bin/sh", "-c", "cat /data/input.txt; sleep 3600"]
          volumeMounts:
            - name: shared-data
              mountPath: /data

      volumes:
        - name: shared-data
          emptyDir: {}
        - name: docker-socket  # Add Docker socket volume
          hostPath:
            path: /var/run/docker.sock
